// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: music.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddSongRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Artist        string                 `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSongRequest) Reset() {
	*x = AddSongRequest{}
	mi := &file_music_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSongRequest) ProtoMessage() {}

func (x *AddSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_music_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSongRequest.ProtoReflect.Descriptor instead.
func (*AddSongRequest) Descriptor() ([]byte, []int) {
	return file_music_proto_rawDescGZIP(), []int{0}
}

func (x *AddSongRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddSongRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

type AddSongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSongResponse) Reset() {
	*x = AddSongResponse{}
	mi := &file_music_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSongResponse) ProtoMessage() {}

func (x *AddSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_music_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSongResponse.ProtoReflect.Descriptor instead.
func (*AddSongResponse) Descriptor() ([]byte, []int) {
	return file_music_proto_rawDescGZIP(), []int{1}
}

func (x *AddSongResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_music_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_music_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_music_proto_rawDescGZIP(), []int{2}
}

type Song struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artist        string                 `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Upvotes       int32                  `protobuf:"varint,4,opt,name=upvotes,proto3" json:"upvotes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Song) Reset() {
	*x = Song{}
	mi := &file_music_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_music_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_music_proto_rawDescGZIP(), []int{3}
}

func (x *Song) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Song) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Song) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *Song) GetUpvotes() int32 {
	if x != nil {
		return x.Upvotes
	}
	return 0
}

type SongQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Songs         []*Song                `protobuf:"bytes,1,rep,name=songs,proto3" json:"songs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SongQueueResponse) Reset() {
	*x = SongQueueResponse{}
	mi := &file_music_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SongQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongQueueResponse) ProtoMessage() {}

func (x *SongQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_music_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongQueueResponse.ProtoReflect.Descriptor instead.
func (*SongQueueResponse) Descriptor() ([]byte, []int) {
	return file_music_proto_rawDescGZIP(), []int{4}
}

func (x *SongQueueResponse) GetSongs() []*Song {
	if x != nil {
		return x.Songs
	}
	return nil
}

type UpvoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SongId        int32                  `protobuf:"varint,1,opt,name=songId,proto3" json:"songId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpvoteRequest) Reset() {
	*x = UpvoteRequest{}
	mi := &file_music_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpvoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpvoteRequest) ProtoMessage() {}

func (x *UpvoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_music_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpvoteRequest.ProtoReflect.Descriptor instead.
func (*UpvoteRequest) Descriptor() ([]byte, []int) {
	return file_music_proto_rawDescGZIP(), []int{5}
}

func (x *UpvoteRequest) GetSongId() int32 {
	if x != nil {
		return x.SongId
	}
	return 0
}

type UpvoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpvoteResponse) Reset() {
	*x = UpvoteResponse{}
	mi := &file_music_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpvoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpvoteResponse) ProtoMessage() {}

func (x *UpvoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_music_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpvoteResponse.ProtoReflect.Descriptor instead.
func (*UpvoteResponse) Descriptor() ([]byte, []int) {
	return file_music_proto_rawDescGZIP(), []int{6}
}

func (x *UpvoteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_music_proto protoreflect.FileDescriptor

const file_music_proto_rawDesc = "" +
	"\n" +
	"\vmusic.proto\x12\x05music\">\n" +
	"\x0eAddSongRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x02 \x01(\tR\x06artist\"+\n" +
	"\x0fAddSongResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\a\n" +
	"\x05Empty\"^\n" +
	"\x04Song\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x03 \x01(\tR\x06artist\x12\x18\n" +
	"\aupvotes\x18\x04 \x01(\x05R\aupvotes\"6\n" +
	"\x11SongQueueResponse\x12!\n" +
	"\x05songs\x18\x01 \x03(\v2\v.music.SongR\x05songs\"'\n" +
	"\rUpvoteRequest\x12\x16\n" +
	"\x06songId\x18\x01 \x01(\x05R\x06songId\"*\n" +
	"\x0eUpvoteResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\xbc\x01\n" +
	"\x11MusicQueueService\x128\n" +
	"\aAddSong\x12\x15.music.AddSongRequest\x1a\x16.music.AddSongResponse\x122\n" +
	"\bGetQueue\x12\f.music.Empty\x1a\x18.music.SongQueueResponse\x129\n" +
	"\n" +
	"UpvoteSong\x12\x14.music.UpvoteRequest\x1a\x15.music.UpvoteResponseB\x04Z\x02./b\x06proto3"

var (
	file_music_proto_rawDescOnce sync.Once
	file_music_proto_rawDescData []byte
)

func file_music_proto_rawDescGZIP() []byte {
	file_music_proto_rawDescOnce.Do(func() {
		file_music_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_music_proto_rawDesc), len(file_music_proto_rawDesc)))
	})
	return file_music_proto_rawDescData
}

var file_music_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_music_proto_goTypes = []any{
	(*AddSongRequest)(nil),    // 0: music.AddSongRequest
	(*AddSongResponse)(nil),   // 1: music.AddSongResponse
	(*Empty)(nil),             // 2: music.Empty
	(*Song)(nil),              // 3: music.Song
	(*SongQueueResponse)(nil), // 4: music.SongQueueResponse
	(*UpvoteRequest)(nil),     // 5: music.UpvoteRequest
	(*UpvoteResponse)(nil),    // 6: music.UpvoteResponse
}
var file_music_proto_depIdxs = []int32{
	3, // 0: music.SongQueueResponse.songs:type_name -> music.Song
	0, // 1: music.MusicQueueService.AddSong:input_type -> music.AddSongRequest
	2, // 2: music.MusicQueueService.GetQueue:input_type -> music.Empty
	5, // 3: music.MusicQueueService.UpvoteSong:input_type -> music.UpvoteRequest
	1, // 4: music.MusicQueueService.AddSong:output_type -> music.AddSongResponse
	4, // 5: music.MusicQueueService.GetQueue:output_type -> music.SongQueueResponse
	6, // 6: music.MusicQueueService.UpvoteSong:output_type -> music.UpvoteResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_music_proto_init() }
func file_music_proto_init() {
	if File_music_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_music_proto_rawDesc), len(file_music_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_music_proto_goTypes,
		DependencyIndexes: file_music_proto_depIdxs,
		MessageInfos:      file_music_proto_msgTypes,
	}.Build()
	File_music_proto = out.File
	file_music_proto_goTypes = nil
	file_music_proto_depIdxs = nil
}
